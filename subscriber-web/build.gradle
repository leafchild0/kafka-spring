buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-allopen"
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.leafchild0.vaadin-kafka'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


ext {
    vaadinVersion = '10.0.9'
}

dependencies {
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('com.vaadin:vaadin-spring-boot-starter')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile "org.apache.kafka:kafka-clients"
    compile "org.springframework.kafka:spring-kafka"
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'com.google.guava:guava:20.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.springframework.kafka:spring-kafka-test"
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}
